{"version":3,"file":"dashboard.js","mappings":"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","sources":["webpack://vuln-bot/./src/assets/ts/analytics.ts","webpack://vuln-bot/./src/assets/ts/dashboard.ts"],"sourcesContent":["/**\n * Frontend analytics for vulnerability dashboard\n */\n\nimport type { AnalyticsConfig } from \"./types\";\n\ninterface AnalyticsEvent {\n  event: string;\n  category: string;\n  action: string;\n  label?: string | undefined;\n  value?: number | undefined;\n  metadata?: Record<string, unknown> | undefined;\n  timestamp: number;\n}\n\ninterface StoredData {\n  events: AnalyticsEvent[];\n  sessionId: string;\n  lastFlush: number;\n}\n\nexport class Analytics {\n  private events: AnalyticsEvent[] = [];\n  private sessionId: string;\n  private startTime: number;\n  private enabled: boolean = true;\n  private config: AnalyticsConfig;\n  private timers: Map<string, number> = new Map();\n  private flushTimeout?: number | undefined;\n  private sessionStartTime?: number | undefined;\n\n  constructor(\n    config: AnalyticsConfig = {\n      enabled: true,\n      storageKey: \"vuln_analytics\",\n      maxEvents: 100,\n      flushInterval: 300000,\n    }\n  ) {\n    this.config = config;\n    this.sessionId = this.generateSessionId();\n    this.startTime = Date.now();\n\n    // Check if analytics should be disabled (e.g., DNT header)\n    const dnt =\n      (navigator as unknown as { doNotTrack?: string }).doNotTrack ??\n      (window as unknown as { doNotTrack?: string }).doNotTrack;\n    if (dnt === \"1\" || dnt === \"yes\") {\n      this.enabled = false;\n      return;\n    }\n\n    if (!config.enabled) {\n      this.enabled = false;\n      return;\n    }\n\n    // Load existing events\n    this.loadEvents();\n\n    // Set up auto-flush\n    if (this.config.flushInterval) {\n      this.scheduleFlush();\n    }\n\n    // Set up page unload handler to save metrics\n    window.addEventListener(\"beforeunload\", () => this.saveEvents());\n  }\n\n  private generateSessionId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private loadEvents(): void {\n    if (!this.enabled || !this.config.storageKey) return;\n\n    try {\n      const stored = localStorage.getItem(this.config.storageKey);\n      if (stored) {\n        const data: StoredData = JSON.parse(stored);\n        this.events = data.events || [];\n      }\n    } catch {\n      // Ignore errors\n    }\n  }\n\n  private saveEvents(): void {\n    if (!this.enabled || !this.config.storageKey) return;\n\n    const data: StoredData = {\n      events: this.events,\n      sessionId: this.sessionId,\n      lastFlush: Date.now(),\n    };\n\n    try {\n      localStorage.setItem(this.config.storageKey, JSON.stringify(data));\n    } catch {\n      // Ignore errors\n    }\n  }\n\n  private scheduleFlush(): void {\n    if (this.flushTimeout) {\n      clearTimeout(this.flushTimeout);\n    }\n\n    this.flushTimeout = window.setTimeout(() => {\n      this.flush();\n      this.scheduleFlush();\n    }, this.config.flushInterval);\n  }\n\n  isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  disable(): void {\n    this.enabled = false;\n  }\n\n  enable(): void {\n    this.enabled = true;\n  }\n\n  optOut(): void {\n    this.enabled = false;\n    this.clear();\n  }\n\n  /**\n   * Track a user event\n   */\n  track(\n    event: string,\n    category: string,\n    action: string,\n    label?: string,\n    value?: number,\n    metadata?: Record<string, unknown>\n  ): void {\n    if (!this.enabled) return;\n\n    const analyticsEvent: AnalyticsEvent = {\n      event,\n      category,\n      action,\n      label,\n      value,\n      metadata,\n      timestamp: Date.now(),\n    };\n\n    this.events.push(analyticsEvent);\n\n    // Enforce max events limit\n    if (this.config.maxEvents && this.events.length > this.config.maxEvents) {\n      this.events = this.events.slice(-this.config.maxEvents);\n    }\n\n    this.saveEvents();\n  }\n\n  getEvents(): AnalyticsEvent[] {\n    return [...this.events];\n  }\n\n  clear(): void {\n    this.events = [];\n    if (this.config.storageKey) {\n      localStorage.removeItem(this.config.storageKey);\n    }\n  }\n\n  // Performance tracking\n  startTimer(name: string): void {\n    this.timers.set(name, performance.now());\n  }\n\n  endTimer(name: string, metadata?: Record<string, unknown>): void {\n    const startTime = this.timers.get(name);\n    if (startTime === undefined) return;\n\n    const duration = performance.now() - startTime;\n    this.timers.delete(name);\n\n    this.track(\"timing\", \"performance\", name, undefined, Math.round(duration), metadata);\n  }\n\n  // User interaction tracking\n  trackVulnerabilityClick(cveId: string, metadata?: Record<string, unknown>): void {\n    this.track(\"click\", \"vulnerability\", \"view\", cveId, undefined, metadata);\n  }\n\n  trackSearch(query: string, resultCount: number): void {\n    this.track(\"search\", \"search\", \"query\", query, resultCount);\n  }\n\n  trackFilterUsage(filterType: string, value: string, resultCount: number): void {\n    this.track(\"filter\", \"filter\", filterType, value, resultCount);\n  }\n\n  trackExport(format: string, count: number): void {\n    this.track(\"export\", \"export\", \"download\", format, count);\n  }\n\n  trackFilter(filterType: string, value: unknown): void {\n    this.track(\"filter_change\", \"interaction\", \"filter\", filterType, undefined, {\n      filterType,\n      value,\n    });\n  }\n\n  // Session tracking\n  trackPageView(path: string): void {\n    this.track(\"pageview\", \"navigation\", \"view\", path);\n  }\n\n  startSession(): void {\n    this.sessionStartTime = performance.now();\n  }\n\n  endSession(): void {\n    if (this.sessionStartTime === undefined) return;\n\n    const duration = Math.round((performance.now() - this.sessionStartTime) / 1000); // seconds\n    this.track(\"session\", \"user\", \"duration\", undefined, duration);\n    this.sessionStartTime = undefined;\n  }\n\n  trackEngagement(data: Record<string, unknown>): void {\n    this.track(\"engagement\", \"user\", \"interaction\", undefined, undefined, data);\n  }\n\n  // Error tracking\n  trackError(error: Error | string, metadata?: Record<string, unknown>): void {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorStack = error instanceof Error ? error.stack : undefined;\n\n    this.track(\"error\", \"error\", \"javascript\", errorMessage, undefined, {\n      ...metadata,\n      stack: errorStack,\n    });\n  }\n\n  // Data management\n  getSummary() {\n    const eventCounts: Record<string, number> = {};\n    const categoryCounts: Record<string, number> = {};\n\n    this.events.forEach((event) => {\n      eventCounts[event.event] = (eventCounts[event.event] ?? 0) + 1;\n      categoryCounts[event.category] = (categoryCounts[event.category] ?? 0) + 1;\n    });\n\n    return {\n      totalEvents: this.events.length,\n      eventCounts,\n      categoryCounts,\n      sessionDuration: Date.now() - this.startTime,\n    };\n  }\n\n  exportJSON(): string {\n    return JSON.stringify(\n      {\n        events: this.events,\n        sessionId: this.sessionId,\n        exportDate: new Date().toISOString(),\n        version: \"1.0.0\",\n      },\n      null,\n      2\n    );\n  }\n\n  async flush(): Promise<void> {\n    if (!this.enabled || !this.config.endpoint || this.events.length === 0) {\n      return;\n    }\n\n    try {\n      await fetch(this.config.endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          events: this.events,\n          sessionId: this.sessionId,\n        }),\n      });\n\n      // Clear events after successful flush\n      this.events = [];\n      this.saveEvents();\n    } catch (error) {\n      // Keep events on error\n      console.error(\"Analytics flush failed:\", error);\n    }\n  }\n\n  /**\n   * Export all session data for debugging\n   */\n  exportSessionData() {\n    const sessions = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key?.includes(\"vuln_analytics\")) {\n        try {\n          const data = JSON.parse(localStorage.getItem(key) ?? \"{}\");\n          sessions.push({\n            key,\n            ...data,\n          });\n        } catch {\n          // Skip invalid entries\n        }\n      }\n    }\n    return JSON.stringify(sessions, null, 2);\n  }\n}\n\n// Export singleton instance\nexport const analytics = new Analytics();\n","/**\n * Alpine.js Vulnerability Dashboard - TypeScript Version\n */\n\nimport type {\n  Vulnerability,\n  VulnerabilityResponse,\n  SeverityLevel,\n  ExploitationStatus,\n} from \"./types/vulnerability\";\nimport \"./types/alpine\";\nimport { analytics } from \"./analytics\";\n\ntype Fuse<T> = import(\"fuse.js\").default<T>;\n\ninterface VulnDashboard {\n  // Data\n  vulnerabilities: Vulnerability[];\n  filteredVulns: Vulnerability[];\n  paginatedVulns: Vulnerability[];\n  searchQuery: string;\n  fuse: Fuse<Vulnerability> | null;\n\n  // Filters\n  filters: {\n    cvssMin: number;\n    cvssMax: number;\n    epssMin: number;\n    epssMax: number;\n    severity: SeverityLevel | \"\";\n    dateFrom: string;\n    dateTo: string;\n    vendor: string;\n    exploitationStatus: ExploitationStatus | \"\";\n    tags: string[];\n  };\n\n  // Sort\n  sortField: keyof Vulnerability;\n  sortDirection: \"asc\" | \"desc\";\n\n  // Pagination\n  currentPage: number;\n  pageSize: number;\n  totalPages: number;\n\n  // State\n  loading: boolean;\n  error: string | null;\n  initialLoad: boolean;\n\n  // Methods\n  init(): Promise<void>;\n  loadVulnerabilities(): Promise<void>;\n  setupLazyLoading(): void;\n  setupSearch(): void;\n  applyFilters(): void;\n  validateFilters(): boolean;\n  announceFilterResults(): void;\n  showValidationErrors(errors: string[]): void;\n  sortResults(results: Vulnerability[]): Vulnerability[];\n  sort(field: keyof Vulnerability): void;\n  updatePagination(): void;\n  previousPage(): void;\n  nextPage(): void;\n  watchFilters(): void;\n  saveStateToHash(): void;\n  loadStateFromHash(): void;\n  getSeverityClass(score: number): string;\n  formatDate(dateStr: string): string;\n  resetFilters(): void;\n  exportResults(): void;\n  trackVulnerabilityClick(cveId: string, riskScore: number): void;\n  setupKeyboardShortcuts(): void;\n  showKeyboardHelp(): void;\n  $nextTick(callback: () => void): void;\n}\n\ndocument.addEventListener(\"alpine:init\", () => {\n  window.Alpine.data(\n    \"vulnDashboard\",\n    (): VulnDashboard => ({\n      // Data\n      vulnerabilities: [],\n      filteredVulns: [],\n      paginatedVulns: [],\n      searchQuery: \"\",\n      fuse: null,\n\n      // Filters\n      filters: {\n        cvssMin: 0,\n        cvssMax: 10,\n        epssMin: 0,\n        epssMax: 100,\n        severity: \"\",\n        dateFrom: \"\",\n        dateTo: \"\",\n        vendor: \"\",\n        exploitationStatus: \"\",\n        tags: [],\n      },\n\n      // Sort\n      sortField: \"exploitationStatus\",\n      sortDirection: \"desc\",\n\n      // Pagination\n      currentPage: 1,\n      pageSize: 20,\n      totalPages: 1,\n\n      // State\n      loading: true,\n      error: null,\n      initialLoad: true,\n\n      async init(): Promise<void> {\n        // Start performance timer\n        analytics.startTimer(\"page-load\");\n\n        // Load state from URL hash\n        this.loadStateFromHash();\n\n        // Load vulnerability data\n        await this.loadVulnerabilities();\n\n        // Set up Fuse.js for fuzzy search\n        this.setupSearch();\n\n        // Apply initial filters\n        this.applyFilters();\n\n        // Mark initial load as complete\n        this.initialLoad = false;\n\n        // Watch for changes\n        this.watchFilters();\n\n        // Set up keyboard shortcuts\n        this.setupKeyboardShortcuts();\n\n        // Track performance\n        analytics.endTimer(\"page-load\");\n      },\n\n      async loadVulnerabilities(): Promise<void> {\n        try {\n          this.loading = true;\n          this.error = null;\n\n          const response = await fetch(\"/vuln-bot/api/vulns/index.json\");\n          if (!response.ok) {\n            throw new Error(`Failed to load vulnerabilities: ${response.status}`);\n          }\n\n          const data: VulnerabilityResponse = await response.json();\n          this.vulnerabilities = data.vulnerabilities || [];\n          this.loading = false;\n\n          // Set up intersection observer for lazy loading\n          this.setupLazyLoading();\n        } catch (error) {\n          const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n          this.error = errorMessage;\n          this.loading = false;\n          console.error(\"Failed to load vulnerabilities:\", error);\n        }\n      },\n\n      setupLazyLoading(): void {\n        // Create intersection observer for lazy loading table rows\n        if (\"IntersectionObserver\" in window) {\n          const observerOptions = {\n            root: null,\n            rootMargin: \"100px\", // Start loading 100px before visible\n            threshold: 0.01,\n          };\n\n          const lazyLoadObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n              if (entry.isIntersecting) {\n                const element = entry.target as HTMLElement;\n                element.classList.add(\"loaded\");\n                lazyLoadObserver.unobserve(element);\n              }\n            });\n          }, observerOptions);\n\n          // Observe vulnerability rows after render\n          this.$nextTick(() => {\n            document.querySelectorAll(\".vulnerability-row[data-lazy]\").forEach((row) => {\n              lazyLoadObserver.observe(row);\n            });\n          });\n        }\n      },\n\n      setupSearch(): void {\n        if (this.vulnerabilities.length === 0) return;\n\n        // Configure Fuse.js for fuzzy search\n        const options = {\n          keys: [\"cveId\", \"title\", \"vendors\", \"products\", \"tags\"],\n          threshold: 0.3,\n          includeScore: true,\n        };\n\n        this.fuse = new window.Fuse(this.vulnerabilities, options);\n      },\n\n      applyFilters(): void {\n        // Validate filters first\n        if (!this.validateFilters()) {\n          return;\n        }\n\n        let results: Vulnerability[] = [...this.vulnerabilities];\n\n        // Apply search\n        if (this.searchQuery.trim() && this.fuse) {\n          const searchResults = this.fuse.search(this.searchQuery);\n          results = searchResults.map((result: { item: Vulnerability }) => result.item);\n\n          // Track search\n          analytics.trackSearch(this.searchQuery, results.length);\n        }\n\n        // Apply CVSS filter\n        results = results.filter((vuln) => {\n          const score = vuln.cvssScore || 0;\n          return score >= this.filters.cvssMin && score <= this.filters.cvssMax;\n        });\n\n        // Apply EPSS filter\n        results = results.filter((vuln) => {\n          const percentile = vuln.epssPercentile || 0;\n          return percentile >= this.filters.epssMin && percentile <= this.filters.epssMax;\n        });\n\n        // Apply severity filter\n        if (this.filters.severity) {\n          results = results.filter((vuln) => vuln.severity === this.filters.severity);\n        }\n\n        // Apply date filter\n        if (this.filters.dateFrom) {\n          const fromDate = new Date(this.filters.dateFrom);\n          results = results.filter((vuln) => new Date(vuln.publishedDate) >= fromDate);\n        }\n\n        if (this.filters.dateTo) {\n          const toDate = new Date(this.filters.dateTo);\n          results = results.filter((vuln) => new Date(vuln.publishedDate) <= toDate);\n        }\n\n        // Apply vendor filter\n        if (this.filters.vendor) {\n          const vendorLower = this.filters.vendor.toLowerCase();\n          results = results.filter((vuln) =>\n            vuln.vendors.some((v) => v.toLowerCase().includes(vendorLower))\n          );\n        }\n\n        // Apply exploitation status filter\n        if (this.filters.exploitationStatus) {\n          results = results.filter(\n            (vuln) => vuln.exploitationStatus === this.filters.exploitationStatus\n          );\n        }\n\n        // Apply tag filter\n        if (this.filters.tags.length > 0) {\n          results = results.filter((vuln) =>\n            this.filters.tags.every((tag) => vuln.tags.includes(tag))\n          );\n        }\n\n        // Apply sorting\n        results = this.sortResults(results);\n\n        this.filteredVulns = results;\n        this.updatePagination();\n        this.saveStateToHash();\n\n        // Announce results to screen readers\n        this.announceFilterResults();\n      },\n\n      announceFilterResults(): void {\n        const resultCount = this.filteredVulns.length;\n        const totalCount = this.vulnerabilities.length;\n\n        let announcement = `Showing ${resultCount} of ${totalCount} vulnerabilities`;\n\n        // Add filter context\n        const activeFilters = [];\n        if (this.searchQuery) activeFilters.push(`matching \"${this.searchQuery}\"`);\n        if (this.filters.severity) activeFilters.push(`severity: ${this.filters.severity}`);\n        if (this.filters.cvssMin > 0 || this.filters.cvssMax < 10) {\n          activeFilters.push(`CVSS: ${this.filters.cvssMin}-${this.filters.cvssMax}`);\n        }\n        if (this.filters.epssMin > 0 || this.filters.epssMax < 100) {\n          activeFilters.push(`EPSS: ${this.filters.epssMin}%-${this.filters.epssMax}%`);\n        }\n        if (this.filters.vendor) activeFilters.push(`vendor: ${this.filters.vendor}`);\n        if (this.filters.exploitationStatus) {\n          activeFilters.push(`exploitation: ${this.filters.exploitationStatus}`);\n        }\n        if (this.filters.tags.length > 0) {\n          activeFilters.push(`tags: ${this.filters.tags.join(\", \")}`);\n        }\n\n        if (activeFilters.length > 0) {\n          announcement += ` with filters: ${activeFilters.join(\", \")}`;\n        }\n\n        // Create or update live region\n        let liveRegion = document.getElementById(\"filter-announcement\");\n        if (!liveRegion) {\n          liveRegion = document.createElement(\"div\");\n          liveRegion.id = \"filter-announcement\";\n          liveRegion.className = \"sr-only\";\n          liveRegion.setAttribute(\"role\", \"status\");\n          liveRegion.setAttribute(\"aria-live\", \"polite\");\n          liveRegion.setAttribute(\"aria-atomic\", \"true\");\n          document.body.appendChild(liveRegion);\n        }\n\n        // Update announcement\n        liveRegion.textContent = announcement;\n      },\n\n      validateFilters(): boolean {\n        const errors = [];\n\n        // Validate CVSS range\n        if (this.filters.cvssMin > this.filters.cvssMax) {\n          errors.push(\"CVSS minimum score cannot be greater than maximum\");\n        }\n\n        // Validate EPSS range\n        if (this.filters.epssMin > this.filters.epssMax) {\n          errors.push(\"EPSS minimum score cannot be greater than maximum\");\n        }\n\n        // Validate date range\n        if (this.filters.dateFrom && this.filters.dateTo) {\n          const fromDate = new Date(this.filters.dateFrom);\n          const toDate = new Date(this.filters.dateTo);\n          if (fromDate > toDate) {\n            errors.push(\"Start date cannot be after end date\");\n          }\n        }\n\n        // Show errors\n        if (errors.length > 0) {\n          this.showValidationErrors(errors);\n          return false;\n        }\n\n        return true;\n      },\n\n      showValidationErrors(errors: string[]): void {\n        // Create or update error region\n        let errorRegion = document.getElementById(\"validation-errors\");\n        if (!errorRegion) {\n          errorRegion = document.createElement(\"div\");\n          errorRegion.id = \"validation-errors\";\n          errorRegion.className = \"validation-errors\";\n          errorRegion.setAttribute(\"role\", \"alert\");\n          errorRegion.setAttribute(\"aria-live\", \"assertive\");\n          const filterSection = document.getElementById(\"search-filters\");\n          filterSection?.insertBefore(errorRegion, filterSection.firstChild);\n        }\n\n        // Build error list\n        errorRegion.innerHTML = `\n          <h3>Validation Errors</h3>\n          <ul>\n            ${errors.map((error) => `<li>${error}</li>`).join(\"\")}\n          </ul>\n        `;\n\n        // Focus on first error\n        errorRegion.focus();\n\n        // Clear errors after 5 seconds\n        setTimeout(() => {\n          errorRegion.innerHTML = \"\";\n        }, 5000);\n      },\n\n      sortResults(results: Vulnerability[]): Vulnerability[] {\n        const field = this.sortField;\n        const direction = this.sortDirection;\n\n        return results.sort((a, b) => {\n          let aVal: string | number = a[field] as string | number;\n          let bVal: string | number = b[field] as string | number;\n\n          // Handle null/undefined values\n          aVal ??= \"\";\n          bVal ??= \"\";\n\n          // Handle dates\n          if (typeof field === \"string\" && field.includes(\"Date\")) {\n            aVal = new Date(aVal as string).getTime();\n            bVal = new Date(bVal as string).getTime();\n          }\n\n          // Compare\n          if (aVal < bVal) return direction === \"asc\" ? -1 : 1;\n          if (aVal > bVal) return direction === \"asc\" ? 1 : -1;\n          return 0;\n        });\n      },\n\n      sort(field: keyof Vulnerability): void {\n        if (this.sortField === field) {\n          // Toggle direction\n          this.sortDirection = this.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n        } else {\n          // New field, default to descending\n          this.sortField = field;\n          this.sortDirection = \"desc\";\n        }\n\n        // Track sort change\n        analytics.track(\"sort\", \"interaction\", \"sort\", field, undefined, {\n          direction: this.sortDirection,\n        });\n\n        this.applyFilters();\n      },\n\n      updatePagination(): void {\n        this.totalPages = Math.ceil(this.filteredVulns.length / this.pageSize);\n        this.currentPage = Math.min(this.currentPage, Math.max(1, this.totalPages));\n\n        const start = (this.currentPage - 1) * this.pageSize;\n        const end = start + this.pageSize;\n        this.paginatedVulns = this.filteredVulns.slice(start, end);\n      },\n\n      previousPage(): void {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n          this.updatePagination();\n        }\n      },\n\n      nextPage(): void {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n          this.updatePagination();\n        }\n      },\n\n      watchFilters(): void {\n        // Watch for filter changes\n        (this as unknown as { $watch: Function }).$watch(\"searchQuery\", () => this.applyFilters());\n        (this as unknown as { $watch: Function }).$watch(\"filters\", () => this.applyFilters(), {\n          deep: true,\n        });\n        (this as unknown as { $watch: Function }).$watch(\"pageSize\", () => {\n          this.currentPage = 1;\n          this.updatePagination();\n        });\n      },\n\n      saveStateToHash(): void {\n        // Don't save state during initial load\n        if (this.loading || this.vulnerabilities.length === 0 || this.initialLoad) {\n          return;\n        }\n\n        const state: Record<string, string | number> = {\n          q: this.searchQuery,\n          cvssMin: this.filters.cvssMin,\n          cvssMax: this.filters.cvssMax,\n          epssMin: this.filters.epssMin,\n          epssMax: this.filters.epssMax,\n          severity: this.filters.severity,\n          dateFrom: this.filters.dateFrom,\n          dateTo: this.filters.dateTo,\n          vendor: this.filters.vendor,\n          exploitation: this.filters.exploitationStatus,\n          tags: this.filters.tags.join(\",\"),\n          sort: this.sortField,\n          dir: this.sortDirection,\n          page: this.currentPage,\n          size: this.pageSize,\n        };\n\n        // Remove empty values and defaults\n        Object.keys(state).forEach((key) => {\n          const value = state[key];\n          if (\n            !value ||\n            value === \"\" ||\n            (key === \"cvssMin\" && value === 0) ||\n            (key === \"cvssMax\" && value === 10) ||\n            (key === \"epssMin\" && value === 0) ||\n            (key === \"epssMax\" && value === 100) ||\n            (key === \"page\" && value === 1) ||\n            (key === \"size\" && value === 20) ||\n            (key === \"sort\" && value === \"exploitationStatus\") ||\n            (key === \"dir\" && value === \"desc\")\n          ) {\n            delete state[key];\n          }\n        });\n\n        const hash = new URLSearchParams(\n          Object.fromEntries(Object.entries(state).map(([k, v]) => [k, String(v)]))\n        ).toString();\n        window.location.hash = hash;\n      },\n\n      loadStateFromHash(): void {\n        const hash = window.location.hash.slice(1);\n        if (!hash) return;\n\n        const params = new URLSearchParams(hash);\n\n        // Load search query\n        this.searchQuery = params.get(\"q\") ?? \"\";\n\n        // Load filters\n        this.filters.cvssMin = parseFloat(params.get(\"cvssMin\") ?? \"0\");\n        this.filters.cvssMax = parseFloat(params.get(\"cvssMax\") ?? \"10\");\n        this.filters.epssMin = parseInt(params.get(\"epssMin\") ?? \"0\");\n        this.filters.epssMax = parseInt(params.get(\"epssMax\") ?? \"100\");\n        this.filters.severity = (params.get(\"severity\") ?? \"\") as SeverityLevel | \"\";\n        this.filters.dateFrom = params.get(\"dateFrom\") ?? \"\";\n        this.filters.dateTo = params.get(\"dateTo\") ?? \"\";\n        this.filters.vendor = params.get(\"vendor\") ?? \"\";\n        this.filters.exploitationStatus = (params.get(\"exploitation\") ?? \"\") as\n          | ExploitationStatus\n          | \"\";\n\n        const tags = params.get(\"tags\");\n        this.filters.tags = tags ? tags.split(\",\").filter((t) => t) : [];\n\n        // Load sorting\n        this.sortField = (params.get(\"sort\") ?? \"exploitationStatus\") as keyof Vulnerability;\n        this.sortDirection = (params.get(\"dir\") ?? \"desc\") as \"asc\" | \"desc\";\n\n        // Load pagination\n        this.currentPage = parseInt(params.get(\"page\") ?? \"1\");\n        this.pageSize = parseInt(params.get(\"size\") ?? \"20\");\n      },\n\n      getSeverityClass(score: number): string {\n        if (score >= 9) return \"severity-critical\";\n        if (score >= 7) return \"severity-high\";\n        if (score >= 4) return \"severity-medium\";\n        if (score > 0) return \"severity-low\";\n        return \"severity-none\";\n      },\n\n      formatDate(dateStr: string): string {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        });\n      },\n\n      resetFilters(): void {\n        this.searchQuery = \"\";\n        this.filters = {\n          cvssMin: 0,\n          cvssMax: 10,\n          epssMin: 0,\n          epssMax: 100,\n          severity: \"\",\n          dateFrom: \"\",\n          dateTo: \"\",\n          vendor: \"\",\n          exploitationStatus: \"\",\n          tags: [],\n        };\n        this.currentPage = 1;\n        this.applyFilters();\n      },\n\n      exportResults(): void {\n        // Track export\n        analytics.trackExport(\"csv\", this.filteredVulns.length);\n\n        // Create CSV content\n        const headers = [\n          \"CVE ID\",\n          \"Title\",\n          \"Exploitation Status\",\n          \"Severity\",\n          \"CVSS Score\",\n          \"EPSS %\",\n          \"Published Date\",\n        ];\n        const rows = this.filteredVulns.map((vuln) => [\n          vuln.cveId,\n          `\"${vuln.title.replace(/\"/g, '\"\"')}\"`,\n          vuln.exploitationStatus,\n          vuln.severity,\n          vuln.cvssScore?.toString() || \"\",\n          vuln.epssPercentile?.toString() || \"\",\n          vuln.publishedDate,\n        ]);\n\n        const csv = [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\n\n        // Download CSV\n        const blob = new Blob([csv], { type: \"text/csv\" });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `vulnerabilities-${new Date().toISOString().slice(0, 10)}.csv`;\n        a.click();\n        URL.revokeObjectURL(url);\n      },\n\n      trackVulnerabilityClick(cveId: string, riskScore: number): void {\n        analytics.trackVulnerabilityClick(cveId, { riskScore });\n      },\n\n      setupKeyboardShortcuts(): void {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n          // Ignore if user is typing in an input field\n          if (\n            event.target instanceof HTMLInputElement ||\n            event.target instanceof HTMLTextAreaElement\n          ) {\n            return;\n          }\n\n          // Keyboard shortcuts\n          switch (event.key) {\n            case \"/\":\n              // Focus search input\n              event.preventDefault();\n              const searchInput = document.getElementById(\"search-input\") as HTMLInputElement;\n              searchInput?.focus();\n              break;\n\n            case \"r\":\n              // Reset filters\n              if (!event.ctrlKey && !event.metaKey) {\n                event.preventDefault();\n                this.resetFilters();\n              }\n              break;\n\n            case \"e\":\n              // Export results\n              if (!event.ctrlKey && !event.metaKey) {\n                event.preventDefault();\n                this.exportResults();\n              }\n              break;\n\n            case \"ArrowLeft\":\n              // Previous page\n              if (!event.ctrlKey && !event.metaKey && !event.shiftKey) {\n                event.preventDefault();\n                this.previousPage();\n              }\n              break;\n\n            case \"ArrowRight\":\n              // Next page\n              if (!event.ctrlKey && !event.metaKey && !event.shiftKey) {\n                event.preventDefault();\n                this.nextPage();\n              }\n              break;\n\n            case \"?\":\n              // Show help\n              event.preventDefault();\n              this.showKeyboardHelp();\n              break;\n\n            case \"Escape\":\n              // Close help modal if open\n              const helpModal = document.getElementById(\"keyboard-help-modal\");\n              if (helpModal && !helpModal.classList.contains(\"hidden\")) {\n                event.preventDefault();\n                helpModal.classList.add(\"hidden\");\n              }\n              break;\n          }\n\n          // Number keys for page size\n          if (event.key >= \"1\" && event.key <= \"4\" && !event.ctrlKey && !event.metaKey) {\n            event.preventDefault();\n            const pageSizes = [10, 20, 50, 100];\n            const index = parseInt(event.key) - 1;\n            if (index < pageSizes.length && pageSizes[index] !== undefined) {\n              this.pageSize = pageSizes[index]!;\n            }\n          }\n        });\n      },\n\n      showKeyboardHelp(): void {\n        let helpModal = document.getElementById(\"keyboard-help-modal\");\n\n        if (!helpModal) {\n          // Create help modal\n          helpModal = document.createElement(\"div\");\n          helpModal.id = \"keyboard-help-modal\";\n          helpModal.className = \"modal-backdrop\";\n          helpModal.innerHTML = `\n              <div class=\"modal-content\" role=\"dialog\" \n                   aria-labelledby=\"keyboard-help-title\" aria-modal=\"true\">\n                <h2 id=\"keyboard-help-title\">Keyboard Shortcuts</h2>\n                <button class=\"modal-close\" aria-label=\"Close help modal\"\n                        onclick=\"document.getElementById('keyboard-help-modal')\n                                 .classList.add('hidden')\">\n                  ×\n                </button>\n                <dl class=\"keyboard-shortcuts\">\n                  <dt><kbd>/</kbd></dt>\n                  <dd>Focus search input</dd>\n                  \n                  <dt><kbd>r</kbd></dt>\n                  <dd>Reset all filters</dd>\n                  \n                  <dt><kbd>e</kbd></dt>\n                  <dd>Export results as CSV</dd>\n                  \n                  <dt><kbd>←</kbd> <kbd>→</kbd></dt>\n                  <dd>Navigate between pages</dd>\n                  \n                  <dt><kbd>1</kbd> - <kbd>4</kbd></dt>\n                  <dd>Set page size (10, 20, 50, 100)</dd>\n                  \n                  <dt><kbd>?</kbd></dt>\n                  <dd>Show this help</dd>\n                  \n                  <dt><kbd>Esc</kbd></dt>\n                  <dd>Close this help</dd>\n                </dl>\n              </div>\n            `;\n          document.body.appendChild(helpModal);\n        }\n\n        helpModal.classList.remove(\"hidden\");\n\n        // Focus the close button for accessibility\n        const closeButton = helpModal.querySelector(\".modal-close\") as HTMLButtonElement;\n        closeButton?.focus();\n\n        // Track help usage\n        analytics.track(\"keyboard-help\", \"interaction\", \"help\", \"show\");\n      },\n\n      $nextTick(callback: () => void): void {\n        // This method is provided by Alpine.js at runtime\n        // @ts-ignore\n        this.$nextTick(callback);\n      },\n    })\n  );\n});\n"],"names":["analytics","constructor","config","enabled","storageKey","maxEvents","flushInterval","events","timers","Map","this","sessionId","generateSessionId","startTime","Date","now","dnt","navigator","doNotTrack","window","loadEvents","scheduleFlush","addEventListener","saveEvents","Math","random","toString","substr","stored","localStorage","getItem","data","JSON","parse","lastFlush","setItem","stringify","flushTimeout","clearTimeout","setTimeout","flush","isEnabled","disable","enable","optOut","clear","track","event","category","action","label","value","metadata","analyticsEvent","timestamp","push","length","slice","getEvents","removeItem","startTimer","name","set","performance","endTimer","get","undefined","duration","delete","round","trackVulnerabilityClick","cveId","trackSearch","query","resultCount","trackFilterUsage","filterType","trackExport","format","count","trackFilter","trackPageView","path","startSession","sessionStartTime","endSession","trackEngagement","trackError","error","errorMessage","Error","message","String","errorStack","stack","getSummary","eventCounts","categoryCounts","forEach","totalEvents","sessionDuration","exportJSON","exportDate","toISOString","version","endpoint","fetch","method","headers","body","console","exportSessionData","sessions","i","key","includes","document","Alpine","vulnerabilities","filteredVulns","paginatedVulns","searchQuery","fuse","filters","cvssMin","cvssMax","epssMin","epssMax","severity","dateFrom","dateTo","vendor","exploitationStatus","tags","sortField","sortDirection","currentPage","pageSize","totalPages","loading","initialLoad","init","loadStateFromHash","loadVulnerabilities","setupSearch","applyFilters","watchFilters","setupKeyboardShortcuts","response","ok","status","json","setupLazyLoading","lazyLoadObserver","IntersectionObserver","entries","entry","isIntersecting","element","target","classList","add","unobserve","root","rootMargin","threshold","$nextTick","querySelectorAll","row","observe","Fuse","keys","includeScore","validateFilters","results","trim","search","map","result","item","filter","vuln","score","cvssScore","percentile","epssPercentile","fromDate","publishedDate","toDate","vendorLower","toLowerCase","vendors","some","v","every","tag","sortResults","updatePagination","saveStateToHash","announceFilterResults","announcement","activeFilters","join","liveRegion","getElementById","createElement","id","className","setAttribute","appendChild","textContent","errors","showValidationErrors","errorRegion","filterSection","insertBefore","firstChild","innerHTML","focus","field","direction","sort","a","b","aVal","bVal","getTime","ceil","min","max","start","end","previousPage","nextPage","$watch","deep","state","q","exploitation","dir","page","size","Object","hash","URLSearchParams","fromEntries","k","location","params","parseFloat","parseInt","split","t","getSeverityClass","formatDate","dateStr","toLocaleDateString","year","month","day","resetFilters","exportResults","csv","title","replace","blob","Blob","type","url","URL","createObjectURL","href","download","click","revokeObjectURL","riskScore","HTMLInputElement","HTMLTextAreaElement","preventDefault","searchInput","ctrlKey","metaKey","shiftKey","showKeyboardHelp","helpModal","contains","pageSizes","index","remove","closeButton","querySelector","callback"],"sourceRoot":""}