{"version":3,"file":"dashboard.js","mappings":"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","sources":["webpack://vuln-bot/./src/assets/ts/analytics.ts","webpack://vuln-bot/./src/assets/ts/components/CveModal.ts","webpack://vuln-bot/./src/assets/ts/dashboard.ts"],"sourcesContent":["/**\n * Frontend analytics for vulnerability dashboard\n */\n\nimport type { AnalyticsConfig } from \"./types\";\n\ninterface AnalyticsEvent {\n  event: string;\n  category: string;\n  action: string;\n  label?: string | undefined;\n  value?: number | undefined;\n  metadata?: Record<string, unknown> | undefined;\n  timestamp: number;\n}\n\ninterface StoredData {\n  events: AnalyticsEvent[];\n  sessionId: string;\n  lastFlush: number;\n}\n\nexport class Analytics {\n  private events: AnalyticsEvent[] = [];\n  private sessionId: string;\n  private startTime: number;\n  private enabled: boolean = true;\n  private config: AnalyticsConfig;\n  private timers: Map<string, number> = new Map();\n  private flushTimeout?: number | undefined;\n  private sessionStartTime?: number | undefined;\n\n  constructor(\n    config: AnalyticsConfig = {\n      enabled: true,\n      storageKey: \"vuln_analytics\",\n      maxEvents: 100,\n      flushInterval: 300000,\n    }\n  ) {\n    this.config = config;\n    this.sessionId = this.generateSessionId();\n    this.startTime = Date.now();\n\n    // Check if analytics should be disabled (e.g., DNT header)\n    const dnt =\n      (navigator as unknown as { doNotTrack?: string }).doNotTrack ??\n      (window as unknown as { doNotTrack?: string }).doNotTrack;\n    if (dnt === \"1\" || dnt === \"yes\") {\n      this.enabled = false;\n      return;\n    }\n\n    if (!config.enabled) {\n      this.enabled = false;\n      return;\n    }\n\n    // Load existing events\n    this.loadEvents();\n\n    // Set up auto-flush\n    if (this.config.flushInterval) {\n      this.scheduleFlush();\n    }\n\n    // Set up page unload handler to save metrics\n    window.addEventListener(\"beforeunload\", () => this.saveEvents());\n  }\n\n  private generateSessionId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private loadEvents(): void {\n    if (!this.enabled || !this.config.storageKey) return;\n\n    try {\n      const stored = localStorage.getItem(this.config.storageKey);\n      if (stored) {\n        const data: StoredData = JSON.parse(stored);\n        this.events = data.events || [];\n      }\n    } catch {\n      // Ignore errors\n    }\n  }\n\n  private saveEvents(): void {\n    if (!this.enabled || !this.config.storageKey) return;\n\n    const data: StoredData = {\n      events: this.events,\n      sessionId: this.sessionId,\n      lastFlush: Date.now(),\n    };\n\n    try {\n      localStorage.setItem(this.config.storageKey, JSON.stringify(data));\n    } catch {\n      // Ignore errors\n    }\n  }\n\n  private scheduleFlush(): void {\n    if (this.flushTimeout) {\n      clearTimeout(this.flushTimeout);\n    }\n\n    this.flushTimeout = window.setTimeout(() => {\n      this.flush();\n      this.scheduleFlush();\n    }, this.config.flushInterval);\n  }\n\n  isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  disable(): void {\n    this.enabled = false;\n  }\n\n  enable(): void {\n    this.enabled = true;\n  }\n\n  optOut(): void {\n    this.enabled = false;\n    this.clear();\n  }\n\n  /**\n   * Track a user event\n   */\n  track(\n    event: string,\n    category: string,\n    action: string,\n    label?: string,\n    value?: number,\n    metadata?: Record<string, unknown>\n  ): void {\n    if (!this.enabled) return;\n\n    const analyticsEvent: AnalyticsEvent = {\n      event,\n      category,\n      action,\n      label,\n      value,\n      metadata,\n      timestamp: Date.now(),\n    };\n\n    this.events.push(analyticsEvent);\n\n    // Enforce max events limit\n    if (this.config.maxEvents && this.events.length > this.config.maxEvents) {\n      this.events = this.events.slice(-this.config.maxEvents);\n    }\n\n    this.saveEvents();\n  }\n\n  getEvents(): AnalyticsEvent[] {\n    return [...this.events];\n  }\n\n  clear(): void {\n    this.events = [];\n    if (this.config.storageKey) {\n      localStorage.removeItem(this.config.storageKey);\n    }\n  }\n\n  // Performance tracking\n  startTimer(name: string): void {\n    this.timers.set(name, performance.now());\n  }\n\n  endTimer(name: string, metadata?: Record<string, unknown>): void {\n    const startTime = this.timers.get(name);\n    if (startTime === undefined) return;\n\n    const duration = performance.now() - startTime;\n    this.timers.delete(name);\n\n    this.track(\"timing\", \"performance\", name, undefined, Math.round(duration), metadata);\n  }\n\n  // User interaction tracking\n  trackVulnerabilityClick(cveId: string, metadata?: Record<string, unknown>): void {\n    this.track(\"click\", \"vulnerability\", \"view\", cveId, undefined, metadata);\n  }\n\n  trackSearch(query: string, resultCount: number): void {\n    this.track(\"search\", \"search\", \"query\", query, resultCount);\n  }\n\n  trackFilterUsage(filterType: string, value: string, resultCount: number): void {\n    this.track(\"filter\", \"filter\", filterType, value, resultCount);\n  }\n\n  trackExport(format: string, count: number): void {\n    this.track(\"export\", \"export\", \"download\", format, count);\n  }\n\n  trackFilter(filterType: string, value: unknown): void {\n    this.track(\"filter_change\", \"interaction\", \"filter\", filterType, undefined, {\n      filterType,\n      value,\n    });\n  }\n\n  // Session tracking\n  trackPageView(path: string): void {\n    this.track(\"pageview\", \"navigation\", \"view\", path);\n  }\n\n  startSession(): void {\n    this.sessionStartTime = performance.now();\n  }\n\n  endSession(): void {\n    if (this.sessionStartTime === undefined) return;\n\n    const duration = Math.round((performance.now() - this.sessionStartTime) / 1000); // seconds\n    this.track(\"session\", \"user\", \"duration\", undefined, duration);\n    this.sessionStartTime = undefined;\n  }\n\n  trackEngagement(data: Record<string, unknown>): void {\n    this.track(\"engagement\", \"user\", \"interaction\", undefined, undefined, data);\n  }\n\n  // Error tracking\n  trackError(error: Error | string, metadata?: Record<string, unknown>): void {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorStack = error instanceof Error ? error.stack : undefined;\n\n    this.track(\"error\", \"error\", \"javascript\", errorMessage, undefined, {\n      ...metadata,\n      stack: errorStack,\n    });\n  }\n\n  // Data management\n  getSummary() {\n    const eventCounts: Record<string, number> = {};\n    const categoryCounts: Record<string, number> = {};\n\n    this.events.forEach((event) => {\n      eventCounts[event.event] = (eventCounts[event.event] ?? 0) + 1;\n      categoryCounts[event.category] = (categoryCounts[event.category] ?? 0) + 1;\n    });\n\n    return {\n      totalEvents: this.events.length,\n      eventCounts,\n      categoryCounts,\n      sessionDuration: Date.now() - this.startTime,\n    };\n  }\n\n  exportJSON(): string {\n    return JSON.stringify(\n      {\n        events: this.events,\n        sessionId: this.sessionId,\n        exportDate: new Date().toISOString(),\n        version: \"1.0.0\",\n      },\n      null,\n      2\n    );\n  }\n\n  async flush(): Promise<void> {\n    if (!this.enabled || !this.config.endpoint || this.events.length === 0) {\n      return;\n    }\n\n    try {\n      await fetch(this.config.endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          events: this.events,\n          sessionId: this.sessionId,\n        }),\n      });\n\n      // Clear events after successful flush\n      this.events = [];\n      this.saveEvents();\n    } catch (error) {\n      // Keep events on error\n      console.error(\"Analytics flush failed:\", error);\n    }\n  }\n\n  /**\n   * Export all session data for debugging\n   */\n  exportSessionData() {\n    const sessions = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key?.includes(\"vuln_analytics\")) {\n        try {\n          const data = JSON.parse(localStorage.getItem(key) ?? \"{}\");\n          sessions.push({\n            key,\n            ...data,\n          });\n        } catch {\n          // Skip invalid entries\n        }\n      }\n    }\n    return JSON.stringify(sessions, null, 2);\n  }\n}\n\n// Export singleton instance\nexport const analytics = new Analytics();\n","/**\n * CVE Details Modal Component\n * Follows WD (Web Design) standards for accessibility, interaction, and responsive design\n */\n\nimport type { Vulnerability } from \"../types/vulnerability\";\n\nexport interface CveModalData {\n  isOpen: boolean;\n  vulnerability: Vulnerability | null;\n  loading: boolean;\n  error: string | null;\n  activeTab: \"overview\" | \"technical\" | \"timeline\" | \"references\";\n  chunkIndex: any | null;\n  mainIndex: any | null;\n}\n\nexport interface CveModalMethods {\n  openModal(cveId: string): Promise<void>;\n  closeModal(): void;\n  loadVulnerabilityDetails(cveId: string): Promise<Vulnerability>;\n  switchTab(tab: CveModalData[\"activeTab\"]): void;\n  handleKeydown(event: KeyboardEvent): void;\n  trapFocus(event: KeyboardEvent): void;\n  formatCvssVector(vector: string): { [key: string]: string };\n  formatDate(dateStr: string): string;\n  getRiskLevelText(score: number): string;\n  getSeverityClass(score: number): string;\n  getCvssMetrics(\n    vulnerability: Vulnerability\n  ): Array<{ label: string; value: string; description: string }>;\n  getTimelineEvents(\n    vulnerability: Vulnerability\n  ): Array<{ date: string; event: string; type: \"published\" | \"modified\" | \"discovered\" }>;\n}\n\nexport type CveModal = CveModalData & CveModalMethods;\n\n/**\n * Creates a CVE modal Alpine.js component\n * Implements WCAG 2.1 AA accessibility standards and responsive design patterns\n */\nexport function createCveModal(): CveModal {\n  return {\n    // State\n    isOpen: false,\n    vulnerability: null,\n    loading: false,\n    error: null,\n    activeTab: \"overview\",\n    chunkIndex: null,\n    mainIndex: null,\n\n    /**\n     * Opens modal and loads CVE details\n     * Follows focus management and ARIA standards\n     */\n    async openModal(cveId: string): Promise<void> {\n      this.isOpen = true;\n      this.loading = true;\n      this.error = null;\n      this.activeTab = \"overview\";\n\n      // Trap focus and manage ARIA\n      document.body.setAttribute(\"aria-hidden\", \"true\");\n      document.body.classList.add(\"modal-open\");\n\n      try {\n        this.vulnerability = await this.loadVulnerabilityDetails(cveId);\n      } catch (error) {\n        this.error =\n          error instanceof Error ? error.message : \"Failed to load vulnerability details\";\n        console.error(\"Failed to load CVE details:\", error);\n      } finally {\n        this.loading = false;\n\n        // Focus management - move to modal content\n        setTimeout(() => {\n          const modal = document.querySelector('[data-modal=\"cve-details\"]') as HTMLElement;\n          const firstFocusable = modal?.querySelector(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n          ) as HTMLElement;\n          firstFocusable?.focus();\n        }, 0);\n      }\n    },\n\n    /**\n     * Closes modal with proper cleanup\n     * Restores focus to trigger element\n     */\n    closeModal(): void {\n      this.isOpen = false;\n      this.vulnerability = null;\n      this.error = null;\n\n      // Restore body state\n      document.body.removeAttribute(\"aria-hidden\");\n      document.body.classList.remove(\"modal-open\");\n\n      // Return focus to trigger element\n      const triggerElement = document.querySelector(`[data-cve-trigger]`) as HTMLElement;\n      triggerElement?.focus();\n    },\n\n    /**\n     * Loads detailed vulnerability data from chunked storage\n     */\n    async loadVulnerabilityDetails(cveId: string): Promise<Vulnerability> {\n      try {\n        // Load main index if not already loaded (it contains severity info)\n        if (!this.mainIndex) {\n          const indexResponse = await fetch(\"/vuln-bot/api/vulns/index.json\");\n          if (indexResponse.ok) {\n            this.mainIndex = await indexResponse.json();\n          }\n        }\n\n        // Find the vulnerability in the main index to get its severity\n        let vulnSummary = null;\n        if (this.mainIndex) {\n          vulnSummary = this.mainIndex.vulnerabilities.find((v: any) => v.cveId === cveId);\n        }\n\n        // If found in index and we have chunk index, load from chunks\n        if (vulnSummary) {\n          // Load chunk index if not already loaded\n          if (!this.chunkIndex) {\n            const chunkIndexResponse = await fetch(\"/vuln-bot/api/vulns/chunk-index.json\");\n            if (chunkIndexResponse.ok) {\n              this.chunkIndex = await chunkIndexResponse.json();\n            }\n          }\n\n          // Find the right chunk based on year and severity\n          if (this.chunkIndex && this.chunkIndex.strategy === \"severity-year\") {\n            const yearMatch = cveId.match(/CVE-(\\d{4})-/);\n            if (yearMatch) {\n              const year = yearMatch[1];\n              const severity = vulnSummary.severity;\n              const chunkKey = `${year}-${severity}`;\n\n              const chunk = this.chunkIndex.chunks.find((c: any) => c.key === chunkKey);\n              if (chunk) {\n                const chunkResponse = await fetch(`/vuln-bot/api/vulns/${chunk.file}`);\n                if (chunkResponse.ok) {\n                  const chunkData = await chunkResponse.json();\n                  const vuln = chunkData.vulnerabilities.find((v: any) => v.cveId === cveId);\n                  if (vuln) {\n                    return vuln;\n                  }\n                }\n              }\n            }\n          }\n\n          // If chunk loading failed, return the summary data (it has most fields)\n          return vulnSummary;\n        }\n\n        // Fallback: try loading individual file (for backward compatibility)\n        const response = await fetch(`/vuln-bot/api/vulns/${cveId}.json`);\n        if (response.ok) {\n          return await response.json();\n        }\n\n        throw new Error(`CVE ${cveId} not found in any data source`);\n      } catch (error) {\n        console.error(\"Failed to load CVE details:\", error);\n        throw error;\n      }\n    },\n\n    /**\n     * Switches active tab with proper ARIA management\n     */\n    switchTab(tab: CveModalData[\"activeTab\"]): void {\n      this.activeTab = tab;\n\n      // Announce tab change to screen readers\n      const announcement = document.createElement(\"div\");\n      announcement.setAttribute(\"aria-live\", \"polite\");\n      announcement.setAttribute(\"aria-atomic\", \"true\");\n      announcement.className = \"sr-only\";\n      announcement.textContent = `Switched to ${tab} tab`;\n      document.body.appendChild(announcement);\n\n      setTimeout(() => {\n        document.body.removeChild(announcement);\n      }, 1000);\n    },\n\n    /**\n     * Handles keyboard navigation\n     * Implements standard modal keyboard patterns\n     */\n    handleKeydown(event: KeyboardEvent): void {\n      if (!this.isOpen) return;\n\n      switch (event.key) {\n        case \"Escape\":\n          event.preventDefault();\n          this.closeModal();\n          break;\n        case \"Tab\":\n          this.trapFocus(event);\n          break;\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n          if (event.altKey) {\n            event.preventDefault();\n            const tabs: CveModalData[\"activeTab\"][] = [\n              \"overview\",\n              \"technical\",\n              \"timeline\",\n              \"references\",\n            ];\n            const tabIndex = parseInt(event.key) - 1;\n            if (tabs[tabIndex]) {\n              this.switchTab(tabs[tabIndex]);\n            }\n          }\n          break;\n      }\n    },\n\n    /**\n     * Implements focus trapping within modal\n     * Essential for accessibility compliance\n     */\n    trapFocus(event: KeyboardEvent): void {\n      const modal = document.querySelector('[data-modal=\"cve-details\"]') as HTMLElement;\n      if (!modal) return;\n\n      const focusableElements = modal.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      const firstFocusable = focusableElements[0];\n      const lastFocusable = focusableElements[focusableElements.length - 1];\n\n      if (event.shiftKey) {\n        if (document.activeElement === firstFocusable) {\n          event.preventDefault();\n          (lastFocusable as HTMLElement)?.focus();\n        }\n      } else {\n        if (document.activeElement === lastFocusable) {\n          event.preventDefault();\n          (firstFocusable as HTMLElement)?.focus();\n        }\n      }\n    },\n\n    /**\n     * Parses CVSS vector string into readable components\n     */\n    formatCvssVector(vector: string): { [key: string]: string } {\n      const metrics: { [key: string]: string } = {};\n      const parts = vector.split(\"/\");\n\n      const cvssMapping: { [key: string]: string } = {\n        AV: \"Attack Vector\",\n        AC: \"Attack Complexity\",\n        PR: \"Privileges Required\",\n        UI: \"User Interaction\",\n        S: \"Scope\",\n        C: \"Confidentiality\",\n        I: \"Integrity\",\n        A: \"Availability\",\n      };\n\n      const valueMapping: { [key: string]: string } = {\n        N: \"None\",\n        A: \"Adjacent\",\n        L: \"Local\",\n        P: \"Physical\",\n        H: \"High\",\n        M: \"Medium\",\n        Low: \"Low\",\n        R: \"Required\",\n        C: \"Changed\",\n        U: \"Unchanged\",\n      };\n\n      parts.forEach((part) => {\n        const [key, value] = part.split(\":\");\n        if (key && value && cvssMapping[key]) {\n          metrics[cvssMapping[key]] = valueMapping[value] ?? value;\n        }\n      });\n\n      return metrics;\n    },\n\n    /**\n     * Formats date strings consistently\n     */\n    formatDate(dateStr: string): string {\n      const date = new Date(dateStr);\n      return date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n\n    /**\n     * Gets human-readable risk level\n     */\n    getRiskLevelText(score: number): string {\n      if (score >= 9.0) return \"Critical Risk\";\n      if (score >= 7.0) return \"High Risk\";\n      if (score >= 4.0) return \"Medium Risk\";\n      if (score >= 0.1) return \"Low Risk\";\n      return \"Informational\";\n    },\n\n    /**\n     * Gets CSS class for severity level\n     */\n    getSeverityClass(score: number): string {\n      if (score >= 9) return \"severity-critical\";\n      if (score >= 7) return \"severity-high\";\n      if (score >= 4) return \"severity-medium\";\n      if (score > 0) return \"severity-low\";\n      return \"severity-none\";\n    },\n\n    /**\n     * Extracts CVSS metrics for display\n     */\n    getCvssMetrics(\n      vulnerability: Vulnerability\n    ): Array<{ label: string; value: string; description: string }> {\n      const metrics = [];\n\n      if (vulnerability.cvssScore) {\n        metrics.push({\n          label: \"Base Score\",\n          value: vulnerability.cvssScore.toString(),\n          description: this.getRiskLevelText(vulnerability.cvssScore),\n        });\n      }\n\n      if (vulnerability.cvssMetrics && vulnerability.cvssMetrics.length > 0) {\n        const cvssMetric = vulnerability.cvssMetrics[0];\n        if (cvssMetric?.vectorString) {\n          const vectorMetrics = this.formatCvssVector(cvssMetric.vectorString);\n          Object.entries(vectorMetrics).forEach(([label, value]) => {\n            metrics.push({\n              label,\n              value,\n              description: `${label}: ${value}`,\n            });\n          });\n        }\n      }\n\n      return metrics;\n    },\n\n    /**\n     * Creates timeline of vulnerability events\n     */\n    getTimelineEvents(\n      vulnerability: Vulnerability\n    ): Array<{ date: string; event: string; type: \"published\" | \"modified\" | \"discovered\" }> {\n      const events = [];\n\n      if (vulnerability.publishedDate) {\n        events.push({\n          date: vulnerability.publishedDate,\n          event: `CVE ${vulnerability.cveId} published`,\n          type: \"published\" as const,\n        });\n      }\n\n      if (\n        vulnerability.lastModifiedDate &&\n        vulnerability.lastModifiedDate !== vulnerability.publishedDate\n      ) {\n        events.push({\n          date: vulnerability.lastModifiedDate,\n          event: \"CVE details updated\",\n          type: \"modified\" as const,\n        });\n      }\n\n      // Sort by date, newest first\n      return events.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    },\n  };\n}\n","/**\n * Alpine.js Vulnerability Dashboard - TypeScript Version\n */\n\nimport type {\n  Vulnerability,\n  VulnerabilityResponse,\n  SeverityLevel,\n  FilterState,\n} from \"./types/vulnerability\";\nimport \"./types/alpine\";\nimport { analytics } from \"./analytics\";\nimport { createCveModal, type CveModal } from \"./components/CveModal\";\n\ntype Fuse<T> = import(\"fuse.js\").default<T>;\n\ninterface VulnDashboard {\n  // Data\n  vulnerabilities: Vulnerability[];\n  filteredVulns: Vulnerability[];\n  paginatedVulns: Vulnerability[];\n  searchQuery: string;\n  fuse: Fuse<Vulnerability> | null;\n\n  // Filters\n  filters: FilterState;\n\n  // Sort\n  sortField: keyof Vulnerability;\n  sortDirection: \"asc\" | \"desc\";\n\n  // Pagination\n  currentPage: number;\n  pageSize: number;\n  totalPages: number;\n\n  // State\n  loading: boolean;\n  error: string | null;\n  initialLoad: boolean;\n\n  // Modal\n  modal: CveModal;\n\n  // Methods\n  init(): Promise<void>;\n  loadVulnerabilities(): Promise<void>;\n  setupLazyLoading(): void;\n  setupSearch(): void;\n  getDateDaysAgo(days: number): string;\n  setDefaultDateRanges(): void;\n  applyFilters(): void;\n  validateFilters(): boolean;\n  announceFilterResults(): void;\n  showValidationErrors(errors: string[]): void;\n  sortResults(results: Vulnerability[]): Vulnerability[];\n  sort(field: keyof Vulnerability): void;\n  updatePagination(): void;\n  previousPage(): void;\n  nextPage(): void;\n  watchFilters(): void;\n  saveStateToHash(): void;\n  loadStateFromHash(): void;\n  getSeverityClass(score: number): string;\n  formatDate(dateStr: string): string;\n  resetFilters(): void;\n  exportResults(): void;\n  trackVulnerabilityClick(cveId: string, riskScore: number): void;\n  setupKeyboardShortcuts(): void;\n  showKeyboardHelp(): void;\n  openCveModal(cveId: string): Promise<void>;\n  $nextTick(callback: () => void): void;\n}\n\ndocument.addEventListener(\"alpine:init\", () => {\n  // Register CVE Modal component\n  window.Alpine.data(\"cveModal\", createCveModal);\n\n  window.Alpine.data(\n    \"vulnDashboard\",\n    (): VulnDashboard => ({\n      // Data\n      vulnerabilities: [],\n      filteredVulns: [],\n      paginatedVulns: [],\n      searchQuery: \"\",\n      fuse: null,\n\n      // Filters\n      filters: {\n        cvssMin: 0,\n        cvssMax: 10,\n        epssMin: 0,\n        epssMax: 100,\n        severity: \"\",\n        publishedDateFrom: \"\",\n        publishedDateTo: \"\",\n        lastModifiedDateFrom: \"\",\n        lastModifiedDateTo: \"\",\n        dateFrom: \"\", // deprecated, keeping for backwards compatibility\n        dateTo: \"\", // deprecated, keeping for backwards compatibility\n        vendor: \"\",\n        tags: [],\n      },\n\n      // Sort\n      sortField: \"epssPercentile\",\n      sortDirection: \"desc\",\n\n      // Pagination\n      currentPage: 1,\n      pageSize: 50,\n      totalPages: 1,\n\n      // State\n      loading: true,\n      error: null,\n      initialLoad: true,\n\n      // Modal\n      modal: createCveModal(),\n\n      // Helper function to get date string for n days ago\n      getDateDaysAgo(days: number): string {\n        const date = new Date();\n        date.setDate(date.getDate() - days);\n        return date.toISOString().split(\"T\")[0] as string; // YYYY-MM-DD format\n      },\n\n      // Helper function to set default date ranges\n      setDefaultDateRanges(): void {\n        // Only set defaults if not already loaded from hash\n        if (!this.filters.publishedDateFrom && !this.filters.dateFrom) {\n          this.filters.publishedDateFrom = this.getDateDaysAgo(90);\n          this.filters.publishedDateTo = \"\"; // Empty means \"today\"\n        }\n        // Keep lastModifiedDate filters empty by default (users can set if needed)\n      },\n\n      async init(): Promise<void> {\n        // Start performance timer\n        analytics.startTimer(\"page-load\");\n\n        // Load state from URL hash\n        this.loadStateFromHash();\n\n        // Set default date ranges if not loaded from hash\n        this.setDefaultDateRanges();\n\n        // Load vulnerability data\n        await this.loadVulnerabilities();\n\n        // Set up Fuse.js for fuzzy search\n        this.setupSearch();\n\n        // Apply initial filters\n        this.applyFilters();\n\n        // Mark initial load as complete\n        this.initialLoad = false;\n\n        // Watch for changes\n        this.watchFilters();\n\n        // Set up keyboard shortcuts\n        this.setupKeyboardShortcuts();\n\n        // Make modal available globally for CVE links\n        window.cveModal = this.modal;\n\n        // Track performance\n        analytics.endTimer(\"page-load\");\n      },\n\n      async loadVulnerabilities(): Promise<void> {\n        try {\n          this.loading = true;\n          this.error = null;\n\n          const response = await fetch(\"/vuln-bot/api/vulns/index.json\");\n          if (!response.ok) {\n            throw new Error(`Failed to load vulnerabilities: ${response.status}`);\n          }\n\n          const data: VulnerabilityResponse = await response.json();\n          this.vulnerabilities = data.vulnerabilities || [];\n          this.loading = false;\n\n          // Set up intersection observer for lazy loading\n          this.setupLazyLoading();\n        } catch (error) {\n          const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n          this.error = errorMessage;\n          this.loading = false;\n          console.error(\"Failed to load vulnerabilities:\", error);\n        }\n      },\n\n      setupLazyLoading(): void {\n        // Create intersection observer for lazy loading table rows\n        if (\"IntersectionObserver\" in window) {\n          const observerOptions = {\n            root: null,\n            rootMargin: \"100px\", // Start loading 100px before visible\n            threshold: 0.01,\n          };\n\n          const lazyLoadObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n              if (entry.isIntersecting) {\n                const element = entry.target as HTMLElement;\n                element.classList.add(\"loaded\");\n                lazyLoadObserver.unobserve(element);\n              }\n            });\n          }, observerOptions);\n\n          // Observe vulnerability rows after render\n          this.$nextTick(() => {\n            document.querySelectorAll(\".vulnerability-row[data-lazy]\").forEach((row) => {\n              lazyLoadObserver.observe(row);\n            });\n          });\n        }\n      },\n\n      setupSearch(): void {\n        if (this.vulnerabilities.length === 0) return;\n\n        // Configure Fuse.js for fuzzy search\n        const options = {\n          keys: [\"cveId\", \"title\", \"vendors\", \"products\", \"tags\"],\n          threshold: 0.3,\n          includeScore: true,\n        };\n\n        this.fuse = new window.Fuse(this.vulnerabilities, options);\n      },\n\n      applyFilters(): void {\n        // Validate filters first\n        if (!this.validateFilters()) {\n          return;\n        }\n\n        let results: Vulnerability[] = [...this.vulnerabilities];\n\n        // Apply search\n        if (this.searchQuery.trim() && this.fuse) {\n          const searchResults = this.fuse.search(this.searchQuery);\n          results = searchResults.map((result: { item: Vulnerability }) => result.item);\n\n          // Track search\n          analytics.trackSearch(this.searchQuery, results.length);\n        }\n\n        // Apply CVSS filter\n        results = results.filter((vuln) => {\n          const score = vuln.cvssScore || 0;\n          return score >= this.filters.cvssMin && score <= this.filters.cvssMax;\n        });\n\n        // Apply EPSS filter\n        results = results.filter((vuln) => {\n          const percentile = vuln.epssPercentile || 0;\n          return percentile >= this.filters.epssMin && percentile <= this.filters.epssMax;\n        });\n\n        // Apply severity filter\n        if (this.filters.severity) {\n          results = results.filter((vuln) => vuln.severity === this.filters.severity);\n        }\n\n        // Apply published date filter (use new fields or fall back to deprecated fields)\n        const publishedFrom = this.filters.publishedDateFrom || this.filters.dateFrom;\n        if (publishedFrom) {\n          const fromDate = new Date(publishedFrom);\n          results = results.filter((vuln) => new Date(vuln.publishedDate) >= fromDate);\n        }\n\n        const publishedTo = this.filters.publishedDateTo || this.filters.dateTo;\n        if (publishedTo) {\n          const toDate = new Date(publishedTo);\n          toDate.setHours(23, 59, 59, 999); // Include entire day\n          results = results.filter((vuln) => new Date(vuln.publishedDate) <= toDate);\n        }\n\n        // Apply last modified date filter\n        if (this.filters.lastModifiedDateFrom) {\n          const fromDate = new Date(this.filters.lastModifiedDateFrom);\n          results = results.filter((vuln) => new Date(vuln.lastModifiedDate) >= fromDate);\n        }\n\n        if (this.filters.lastModifiedDateTo) {\n          const toDate = new Date(this.filters.lastModifiedDateTo);\n          toDate.setHours(23, 59, 59, 999); // Include entire day\n          results = results.filter((vuln) => new Date(vuln.lastModifiedDate) <= toDate);\n        }\n\n        // Apply vendor filter\n        if (this.filters.vendor) {\n          const vendorLower = this.filters.vendor.toLowerCase();\n          results = results.filter((vuln) =>\n            vuln.vendors.some((v) => v.toLowerCase().includes(vendorLower))\n          );\n        }\n\n        // Apply tag filter\n        if (this.filters.tags.length > 0) {\n          results = results.filter((vuln) =>\n            this.filters.tags.every((tag: string) => vuln.tags.includes(tag))\n          );\n        }\n\n        // Apply sorting\n        results = this.sortResults(results);\n\n        this.filteredVulns = results;\n        this.updatePagination();\n        this.saveStateToHash();\n\n        // Announce results to screen readers\n        this.announceFilterResults();\n      },\n\n      announceFilterResults(): void {\n        const resultCount = this.filteredVulns.length;\n        const totalCount = this.vulnerabilities.length;\n\n        let announcement = `Showing ${resultCount} of ${totalCount} vulnerabilities`;\n\n        // Add filter context\n        const activeFilters = [];\n        if (this.searchQuery) activeFilters.push(`matching \"${this.searchQuery}\"`);\n        if (this.filters.severity) activeFilters.push(`severity: ${this.filters.severity}`);\n        if (this.filters.cvssMin > 0 || this.filters.cvssMax < 10) {\n          activeFilters.push(`CVSS: ${this.filters.cvssMin}-${this.filters.cvssMax}`);\n        }\n        if (this.filters.epssMin > 0 || this.filters.epssMax < 100) {\n          activeFilters.push(`EPSS: ${this.filters.epssMin}%-${this.filters.epssMax}%`);\n        }\n        if (this.filters.vendor) activeFilters.push(`vendor: ${this.filters.vendor}`);\n        if (this.filters.tags.length > 0) {\n          activeFilters.push(`tags: ${this.filters.tags.join(\", \")}`);\n        }\n\n        // Date filters\n        const publishedFrom = this.filters.publishedDateFrom || this.filters.dateFrom;\n        const publishedTo = this.filters.publishedDateTo || this.filters.dateTo;\n        if (publishedFrom || publishedTo) {\n          const fromStr = publishedFrom ? `from ${publishedFrom}` : \"\";\n          const toStr = publishedTo ? `to ${publishedTo}` : \"\";\n          activeFilters.push(`published ${fromStr} ${toStr}`.trim());\n        }\n\n        if (this.filters.lastModifiedDateFrom || this.filters.lastModifiedDateTo) {\n          const fromStr = this.filters.lastModifiedDateFrom\n            ? `from ${this.filters.lastModifiedDateFrom}`\n            : \"\";\n          const toStr = this.filters.lastModifiedDateTo\n            ? `to ${this.filters.lastModifiedDateTo}`\n            : \"\";\n          activeFilters.push(`last modified ${fromStr} ${toStr}`.trim());\n        }\n\n        if (activeFilters.length > 0) {\n          announcement += ` with filters: ${activeFilters.join(\", \")}`;\n        }\n\n        // Create or update live region\n        let liveRegion = document.getElementById(\"filter-announcement\");\n        if (!liveRegion) {\n          liveRegion = document.createElement(\"div\");\n          liveRegion.id = \"filter-announcement\";\n          liveRegion.className = \"sr-only\";\n          liveRegion.setAttribute(\"role\", \"status\");\n          liveRegion.setAttribute(\"aria-live\", \"polite\");\n          liveRegion.setAttribute(\"aria-atomic\", \"true\");\n          document.body.appendChild(liveRegion);\n        }\n\n        // Update announcement\n        liveRegion.textContent = announcement;\n      },\n\n      validateFilters(): boolean {\n        const errors = [];\n\n        // Validate CVSS range\n        if (this.filters.cvssMin > this.filters.cvssMax) {\n          errors.push(\"CVSS minimum score cannot be greater than maximum\");\n        }\n\n        // Validate EPSS range\n        if (this.filters.epssMin > this.filters.epssMax) {\n          errors.push(\"EPSS minimum score cannot be greater than maximum\");\n        }\n\n        // Validate published date range\n        const publishedFrom = this.filters.publishedDateFrom || this.filters.dateFrom;\n        const publishedTo = this.filters.publishedDateTo || this.filters.dateTo;\n        if (publishedFrom && publishedTo) {\n          const fromDate = new Date(publishedFrom);\n          const toDate = new Date(publishedTo);\n          if (fromDate > toDate) {\n            errors.push(\"Published start date cannot be after end date\");\n          }\n        }\n\n        // Validate last modified date range\n        if (this.filters.lastModifiedDateFrom && this.filters.lastModifiedDateTo) {\n          const fromDate = new Date(this.filters.lastModifiedDateFrom);\n          const toDate = new Date(this.filters.lastModifiedDateTo);\n          if (fromDate > toDate) {\n            errors.push(\"Last modified start date cannot be after end date\");\n          }\n        }\n\n        // Show errors\n        if (errors.length > 0) {\n          this.showValidationErrors(errors);\n          return false;\n        }\n\n        return true;\n      },\n\n      showValidationErrors(errors: string[]): void {\n        // Create or update error region\n        let errorRegion = document.getElementById(\"validation-errors\");\n        if (!errorRegion) {\n          errorRegion = document.createElement(\"div\");\n          errorRegion.id = \"validation-errors\";\n          errorRegion.className = \"validation-errors\";\n          errorRegion.setAttribute(\"role\", \"alert\");\n          errorRegion.setAttribute(\"aria-live\", \"assertive\");\n          const filterSection = document.getElementById(\"search-filters\");\n          filterSection?.insertBefore(errorRegion, filterSection.firstChild);\n        }\n\n        // Build error list\n        errorRegion.innerHTML = `\n          <h3>Validation Errors</h3>\n          <ul>\n            ${errors.map((error) => `<li>${error}</li>`).join(\"\")}\n          </ul>\n        `;\n\n        // Focus on first error\n        errorRegion.focus();\n\n        // Clear errors after 5 seconds\n        setTimeout(() => {\n          errorRegion.innerHTML = \"\";\n        }, 5000);\n      },\n\n      sortResults(results: Vulnerability[]): Vulnerability[] {\n        const field = this.sortField;\n        const direction = this.sortDirection;\n\n        return results.sort((a, b) => {\n          let aVal: string | number = a[field] as string | number;\n          let bVal: string | number = b[field] as string | number;\n\n          // Handle null/undefined values\n          aVal ??= \"\";\n          bVal ??= \"\";\n\n          // Handle dates\n          if (typeof field === \"string\" && field.includes(\"Date\")) {\n            aVal = new Date(aVal as string).getTime();\n            bVal = new Date(bVal as string).getTime();\n          }\n\n          // Compare\n          if (aVal < bVal) return direction === \"asc\" ? -1 : 1;\n          if (aVal > bVal) return direction === \"asc\" ? 1 : -1;\n          return 0;\n        });\n      },\n\n      sort(field: keyof Vulnerability): void {\n        if (this.sortField === field) {\n          // Toggle direction\n          this.sortDirection = this.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n        } else {\n          // New field, default to descending\n          this.sortField = field;\n          this.sortDirection = \"desc\";\n        }\n\n        // Track sort change\n        analytics.track(\"sort\", \"interaction\", \"sort\", field, undefined, {\n          direction: this.sortDirection,\n        });\n\n        this.applyFilters();\n      },\n\n      updatePagination(): void {\n        this.totalPages = Math.ceil(this.filteredVulns.length / this.pageSize);\n        this.currentPage = Math.min(this.currentPage, Math.max(1, this.totalPages));\n\n        const start = (this.currentPage - 1) * this.pageSize;\n        const end = start + this.pageSize;\n        this.paginatedVulns = this.filteredVulns.slice(start, end);\n\n        // Set up lazy loading for new rows after pagination\n        this.$nextTick(() => {\n          this.setupLazyLoading();\n        });\n      },\n\n      previousPage(): void {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n          this.updatePagination();\n        }\n      },\n\n      nextPage(): void {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n          this.updatePagination();\n        }\n      },\n\n      watchFilters(): void {\n        // Watch for filter changes\n        (this as unknown as { $watch: Function }).$watch(\"searchQuery\", () => this.applyFilters());\n        (this as unknown as { $watch: Function }).$watch(\"filters\", () => this.applyFilters(), {\n          deep: true,\n        });\n        (this as unknown as { $watch: Function }).$watch(\"pageSize\", () => {\n          this.currentPage = 1;\n          this.updatePagination();\n        });\n      },\n\n      saveStateToHash(): void {\n        // Don't save state during initial load\n        if (this.loading || this.vulnerabilities.length === 0 || this.initialLoad) {\n          return;\n        }\n\n        const state: Record<string, string | number> = {\n          q: this.searchQuery,\n          cvssMin: this.filters.cvssMin,\n          cvssMax: this.filters.cvssMax,\n          epssMin: this.filters.epssMin,\n          epssMax: this.filters.epssMax,\n          severity: this.filters.severity,\n          publishedDateFrom: this.filters.publishedDateFrom,\n          publishedDateTo: this.filters.publishedDateTo,\n          lastModifiedDateFrom: this.filters.lastModifiedDateFrom,\n          lastModifiedDateTo: this.filters.lastModifiedDateTo,\n          dateFrom: this.filters.dateFrom, // Keep for backwards compatibility\n          dateTo: this.filters.dateTo, // Keep for backwards compatibility\n          vendor: this.filters.vendor,\n          tags: this.filters.tags.join(\",\"),\n          sort: this.sortField,\n          dir: this.sortDirection,\n          page: this.currentPage,\n          size: this.pageSize,\n        };\n\n        // Remove empty values and defaults\n        Object.keys(state).forEach((key) => {\n          const value = state[key];\n          if (\n            !value ||\n            value === \"\" ||\n            (key === \"cvssMin\" && value === 0) ||\n            (key === \"cvssMax\" && value === 10) ||\n            (key === \"epssMin\" && value === 0) ||\n            (key === \"epssMax\" && value === 100) ||\n            (key === \"page\" && value === 1) ||\n            (key === \"size\" && value === 50) ||\n            (key === \"sort\" && value === \"epssPercentile\") ||\n            (key === \"dir\" && value === \"desc\")\n          ) {\n            delete state[key];\n          }\n        });\n\n        const hash = new URLSearchParams(\n          Object.fromEntries(Object.entries(state).map(([k, v]) => [k, String(v)]))\n        ).toString();\n        window.location.hash = hash;\n      },\n\n      loadStateFromHash(): void {\n        const hash = window.location.hash.slice(1);\n        if (!hash) return;\n\n        const params = new URLSearchParams(hash);\n\n        // Load search query\n        this.searchQuery = params.get(\"q\") ?? \"\";\n\n        // Load filters\n        this.filters.cvssMin = parseFloat(params.get(\"cvssMin\") ?? \"0\");\n        this.filters.cvssMax = parseFloat(params.get(\"cvssMax\") ?? \"10\");\n        this.filters.epssMin = parseInt(params.get(\"epssMin\") ?? \"0\");\n        this.filters.epssMax = parseInt(params.get(\"epssMax\") ?? \"100\");\n        this.filters.severity = (params.get(\"severity\") ?? \"\") as SeverityLevel | \"\";\n        this.filters.publishedDateFrom = params.get(\"publishedDateFrom\") ?? \"\";\n        this.filters.publishedDateTo = params.get(\"publishedDateTo\") ?? \"\";\n        this.filters.lastModifiedDateFrom = params.get(\"lastModifiedDateFrom\") ?? \"\";\n        this.filters.lastModifiedDateTo = params.get(\"lastModifiedDateTo\") ?? \"\";\n        this.filters.dateFrom = params.get(\"dateFrom\") ?? \"\"; // Keep for backwards compatibility\n        this.filters.dateTo = params.get(\"dateTo\") ?? \"\"; // Keep for backwards compatibility\n        this.filters.vendor = params.get(\"vendor\") ?? \"\";\n\n        const tags = params.get(\"tags\");\n        this.filters.tags = tags ? tags.split(\",\").filter((t) => t) : [];\n\n        // Load sorting\n        this.sortField = (params.get(\"sort\") ?? \"epssPercentile\") as keyof Vulnerability;\n        this.sortDirection = (params.get(\"dir\") ?? \"desc\") as \"asc\" | \"desc\";\n\n        // Load pagination\n        this.currentPage = parseInt(params.get(\"page\") ?? \"1\");\n        this.pageSize = parseInt(params.get(\"size\") ?? \"50\");\n      },\n\n      getSeverityClass(score: number): string {\n        if (score >= 9) return \"severity-critical\";\n        if (score >= 7) return \"severity-high\";\n        if (score >= 4) return \"severity-medium\";\n        if (score > 0) return \"severity-low\";\n        return \"severity-none\";\n      },\n\n      formatDate(dateStr: string): string {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        });\n      },\n\n      resetFilters(): void {\n        this.searchQuery = \"\";\n        this.filters = {\n          cvssMin: 0,\n          cvssMax: 10,\n          epssMin: 0,\n          epssMax: 100,\n          severity: \"\",\n          publishedDateFrom: \"\",\n          publishedDateTo: \"\",\n          lastModifiedDateFrom: \"\",\n          lastModifiedDateTo: \"\",\n          dateFrom: \"\",\n          dateTo: \"\",\n          vendor: \"\",\n          tags: [],\n        };\n        this.currentPage = 1;\n\n        // Don't re-apply default date ranges after reset - show ALL data\n        this.applyFilters();\n      },\n\n      exportResults(): void {\n        // Track export\n        analytics.trackExport(\"csv\", this.filteredVulns.length);\n\n        // Create CSV content\n        const headers = [\"CVE ID\", \"Title\", \"Severity\", \"CVSS Score\", \"EPSS %\", \"Published Date\"];\n        const rows = this.filteredVulns.map((vuln) => [\n          vuln.cveId,\n          `\"${vuln.title.replace(/\"/g, '\"\"')}\"`,\n          vuln.severity,\n          vuln.cvssScore?.toString() || \"\",\n          vuln.epssPercentile?.toString() || \"\",\n          vuln.publishedDate,\n        ]);\n\n        const csv = [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\n\n        // Download CSV\n        const blob = new Blob([csv], { type: \"text/csv\" });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `vulnerabilities-${new Date().toISOString().slice(0, 10)}.csv`;\n        a.click();\n        URL.revokeObjectURL(url);\n      },\n\n      trackVulnerabilityClick(cveId: string, riskScore: number): void {\n        analytics.trackVulnerabilityClick(cveId, { riskScore });\n      },\n\n      async openCveModal(cveId: string): Promise<void> {\n        await this.modal.openModal(cveId);\n      },\n\n      setupKeyboardShortcuts(): void {\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n          // Ignore if user is typing in an input field\n          if (\n            event.target instanceof HTMLInputElement ||\n            event.target instanceof HTMLTextAreaElement\n          ) {\n            return;\n          }\n\n          // Keyboard shortcuts\n          switch (event.key) {\n            case \"/\":\n              // Focus search input\n              event.preventDefault();\n              const searchInput = document.getElementById(\"search-input\") as HTMLInputElement;\n              searchInput?.focus();\n              break;\n\n            case \"r\":\n              // Reset filters\n              if (!event.ctrlKey && !event.metaKey) {\n                event.preventDefault();\n                this.resetFilters();\n              }\n              break;\n\n            case \"e\":\n              // Export results\n              if (!event.ctrlKey && !event.metaKey) {\n                event.preventDefault();\n                this.exportResults();\n              }\n              break;\n\n            case \"ArrowLeft\":\n              // Previous page\n              if (!event.ctrlKey && !event.metaKey && !event.shiftKey) {\n                event.preventDefault();\n                this.previousPage();\n              }\n              break;\n\n            case \"ArrowRight\":\n              // Next page\n              if (!event.ctrlKey && !event.metaKey && !event.shiftKey) {\n                event.preventDefault();\n                this.nextPage();\n              }\n              break;\n\n            case \"?\":\n              // Show help\n              event.preventDefault();\n              this.showKeyboardHelp();\n              break;\n\n            case \"Escape\":\n              // Close help modal if open\n              const helpModal = document.getElementById(\"keyboard-help-modal\");\n              if (helpModal && !helpModal.classList.contains(\"hidden\")) {\n                event.preventDefault();\n                helpModal.classList.add(\"hidden\");\n              }\n              break;\n          }\n\n          // Number keys for page size\n          if (event.key >= \"1\" && event.key <= \"4\" && !event.ctrlKey && !event.metaKey) {\n            event.preventDefault();\n            const pageSizes = [10, 20, 50, 100];\n            const index = parseInt(event.key) - 1;\n            if (index < pageSizes.length && pageSizes[index] !== undefined) {\n              this.pageSize = pageSizes[index]!;\n            }\n          }\n        });\n      },\n\n      showKeyboardHelp(): void {\n        let helpModal = document.getElementById(\"keyboard-help-modal\");\n\n        if (!helpModal) {\n          // Create help modal\n          helpModal = document.createElement(\"div\");\n          helpModal.id = \"keyboard-help-modal\";\n          helpModal.className = \"modal-backdrop\";\n          helpModal.innerHTML = `\n              <div class=\"modal-content\" role=\"dialog\" \n                   aria-labelledby=\"keyboard-help-title\" aria-modal=\"true\">\n                <h2 id=\"keyboard-help-title\">Keyboard Shortcuts</h2>\n                <button class=\"modal-close\" aria-label=\"Close help modal\"\n                        onclick=\"document.getElementById('keyboard-help-modal')\n                                 .classList.add('hidden')\">\n                  ×\n                </button>\n                <dl class=\"keyboard-shortcuts\">\n                  <dt><kbd>/</kbd></dt>\n                  <dd>Focus search input</dd>\n                  \n                  <dt><kbd>r</kbd></dt>\n                  <dd>Reset all filters</dd>\n                  \n                  <dt><kbd>e</kbd></dt>\n                  <dd>Export results as CSV</dd>\n                  \n                  <dt><kbd>←</kbd> <kbd>→</kbd></dt>\n                  <dd>Navigate between pages</dd>\n                  \n                  <dt><kbd>1</kbd> - <kbd>4</kbd></dt>\n                  <dd>Set page size (10, 20, 50, 100)</dd>\n                  \n                  <dt><kbd>?</kbd></dt>\n                  <dd>Show this help</dd>\n                  \n                  <dt><kbd>Esc</kbd></dt>\n                  <dd>Close this help</dd>\n                </dl>\n              </div>\n            `;\n          document.body.appendChild(helpModal);\n        }\n\n        helpModal.classList.remove(\"hidden\");\n\n        // Focus the close button for accessibility\n        const closeButton = helpModal.querySelector(\".modal-close\") as HTMLButtonElement;\n        closeButton?.focus();\n\n        // Track help usage\n        analytics.track(\"keyboard-help\", \"interaction\", \"help\", \"show\");\n      },\n\n      $nextTick(callback: () => void): void {\n        // This method is provided by Alpine.js at runtime\n        // @ts-ignore\n        this.$nextTick(callback);\n      },\n    })\n  );\n});\n"],"names":["analytics","constructor","config","enabled","storageKey","maxEvents","flushInterval","events","timers","Map","this","sessionId","generateSessionId","startTime","Date","now","dnt","navigator","doNotTrack","window","loadEvents","scheduleFlush","addEventListener","saveEvents","Math","random","toString","substr","stored","localStorage","getItem","data","JSON","parse","lastFlush","setItem","stringify","flushTimeout","clearTimeout","setTimeout","flush","isEnabled","disable","enable","optOut","clear","track","event","category","action","label","value","metadata","analyticsEvent","timestamp","push","length","slice","getEvents","removeItem","startTimer","name","set","performance","endTimer","get","undefined","duration","delete","round","trackVulnerabilityClick","cveId","trackSearch","query","resultCount","trackFilterUsage","filterType","trackExport","format","count","trackFilter","trackPageView","path","startSession","sessionStartTime","endSession","trackEngagement","trackError","error","errorMessage","Error","message","String","errorStack","stack","getSummary","eventCounts","categoryCounts","forEach","totalEvents","sessionDuration","exportJSON","exportDate","toISOString","version","endpoint","fetch","method","headers","body","console","exportSessionData","sessions","i","key","includes","createCveModal","isOpen","vulnerability","loading","activeTab","chunkIndex","mainIndex","openModal","document","setAttribute","classList","add","loadVulnerabilityDetails","modal","querySelector","firstFocusable","focus","closeModal","removeAttribute","remove","triggerElement","indexResponse","ok","json","vulnSummary","vulnerabilities","find","v","chunkIndexResponse","strategy","yearMatch","match","chunkKey","severity","chunk","chunks","c","chunkResponse","file","vuln","response","switchTab","tab","announcement","createElement","className","textContent","appendChild","removeChild","handleKeydown","preventDefault","trapFocus","altKey","tabs","tabIndex","parseInt","focusableElements","querySelectorAll","lastFocusable","shiftKey","activeElement","formatCvssVector","vector","metrics","parts","split","cvssMapping","AV","AC","PR","UI","S","C","I","A","valueMapping","N","L","P","H","M","Low","R","U","part","formatDate","dateStr","toLocaleDateString","year","month","day","getRiskLevelText","score","getSeverityClass","getCvssMetrics","cvssScore","description","cvssMetrics","cvssMetric","vectorString","vectorMetrics","Object","entries","getTimelineEvents","publishedDate","date","type","lastModifiedDate","sort","a","b","getTime","Alpine","filteredVulns","paginatedVulns","searchQuery","fuse","filters","cvssMin","cvssMax","epssMin","epssMax","publishedDateFrom","publishedDateTo","lastModifiedDateFrom","lastModifiedDateTo","dateFrom","dateTo","vendor","tags","sortField","sortDirection","currentPage","pageSize","totalPages","initialLoad","getDateDaysAgo","days","setDate","getDate","setDefaultDateRanges","init","loadStateFromHash","loadVulnerabilities","setupSearch","applyFilters","watchFilters","setupKeyboardShortcuts","cveModal","status","setupLazyLoading","lazyLoadObserver","IntersectionObserver","entry","isIntersecting","element","target","unobserve","root","rootMargin","threshold","$nextTick","row","observe","Fuse","keys","includeScore","validateFilters","results","trim","search","map","result","item","filter","percentile","epssPercentile","publishedFrom","fromDate","publishedTo","toDate","setHours","vendorLower","toLowerCase","vendors","some","every","tag","sortResults","updatePagination","saveStateToHash","announceFilterResults","activeFilters","join","fromStr","toStr","liveRegion","getElementById","id","errors","showValidationErrors","errorRegion","filterSection","insertBefore","firstChild","innerHTML","field","direction","aVal","bVal","ceil","min","max","start","end","previousPage","nextPage","$watch","deep","state","q","dir","page","size","hash","URLSearchParams","fromEntries","k","location","params","parseFloat","t","resetFilters","exportResults","csv","title","replace","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","riskScore","openCveModal","HTMLInputElement","HTMLTextAreaElement","searchInput","ctrlKey","metaKey","showKeyboardHelp","helpModal","contains","pageSizes","index","closeButton","callback"],"sourceRoot":""}